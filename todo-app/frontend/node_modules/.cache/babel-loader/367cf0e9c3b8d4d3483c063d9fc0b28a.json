{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nexport const todosSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    items: [{\n      id: \"1\",\n      title: \"TEST\",\n      completed: true\n    }, {\n      id: \"2\",\n      title: \"MURO\",\n      completed: false\n    }],\n    activeFilter: 'all'\n  },\n  reducers: {\n    addTodo: {\n      reducer: (state, action) => {\n        state.items.push(action.payload);\n      },\n      prepare: () => {\n        return {\n          payload: {\n            id: nanoid()\n          }\n        };\n      }\n    },\n    toggle: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      const item = state.items.find(item => item.id === id);\n      item.completed = !item.completed;\n    },\n    destroy: (state, action) => {\n      const id = action.payload;\n      const filtered = state.items.filter(item => item.id !== id);\n      state.items = filtered;\n    },\n    changeActiveFilter: (state, action) => {\n      state.activeFilter = action.payload;\n    },\n    clearCompleted: state => {\n      const filtered = state.items.filter(item => item.completed === false);\n      state.items = filtered;\n    }\n  }\n});\nexport const selectTodos = state => state.todos.items;\nexport const selectFilteredTodos = state => {\n  if (state.todos.activeFilter === 'all') {\n    return state.todos.items;\n  } else {\n    return state.todos.items.filter(todo => state.todos.activeFilter === 'active' ? todo.completed === false : todo.completed === true);\n  }\n};\nexport const {\n  addTodo,\n  toggle,\n  destroy,\n  changeActiveFilter,\n  clearCompleted\n} = todosSlice.actions;\nexport default todosSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","todosSlice","name","initialState","items","id","title","completed","activeFilter","reducers","addTodo","reducer","state","action","push","payload","prepare","toggle","item","find","destroy","filtered","filter","changeActiveFilter","clearCompleted","selectTodos","todos","selectFilteredTodos","todo","actions"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/todos-react/todo-app/src/redux/todos/todosSlice.js"],"sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nexport const todosSlice = createSlice({\n    name:'todos',\n    initialState:{\n        items:[\n        {\n            id:\"1\",\n            title:\"TEST\",\n            completed:true\n        },\n        {\n            id:\"2\",\n            title:\"MURO\",\n            completed:false\n        }\n    ],\n    activeFilter:'all'\n    },\n    reducers:{\n        addTodo:{\n            reducer:(state,action) => {\n                state.items.push(action.payload);\n            },\n            prepare: () => {\n                return {\n                    payload: {\n                        id:nanoid(),\n                    }\n                }\n            }  \n        },\n        toggle:(state,action) => {\n            const {id} = action.payload;\n            const item = state.items.find(item => item.id === id);\n            item.completed = !item.completed;\n        },\n        destroy:(state,action) => {\n            const id = action.payload;\n            const filtered = state.items.filter((item) => item.id !== id);\n            state.items = filtered;\n\n        },\n        changeActiveFilter:(state,action) => {\n            state.activeFilter = action.payload;\n        },\n        clearCompleted:(state) => {\n            const filtered = state.items.filter((item) => item.completed === false);\n            state.items = filtered;\n        }\n    },\n});\n\nexport const selectTodos = (state) => state.todos.items;\nexport const selectFilteredTodos = (state) => {\n    if(state.todos.activeFilter === 'all'){\n        return state.todos.items;\n    }else{\n        return state.todos.items.filter((todo) => \n            state.todos.activeFilter === 'active' ? todo.completed === false : todo.completed ===true\n        );\n    }\n}   \n\nexport const {addTodo,toggle,destroy,changeActiveFilter,clearCompleted} = todosSlice.actions\nexport default todosSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,kBAApC;AAEA,OAAO,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAClCG,IAAI,EAAC,OAD6B;EAElCC,YAAY,EAAC;IACTC,KAAK,EAAC,CACN;MACIC,EAAE,EAAC,GADP;MAEIC,KAAK,EAAC,MAFV;MAGIC,SAAS,EAAC;IAHd,CADM,EAMN;MACIF,EAAE,EAAC,GADP;MAEIC,KAAK,EAAC,MAFV;MAGIC,SAAS,EAAC;IAHd,CANM,CADG;IAabC,YAAY,EAAC;EAbA,CAFqB;EAiBlCC,QAAQ,EAAC;IACLC,OAAO,EAAC;MACJC,OAAO,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAkB;QACtBD,KAAK,CAACR,KAAN,CAAYU,IAAZ,CAAiBD,MAAM,CAACE,OAAxB;MACH,CAHG;MAIJC,OAAO,EAAE,MAAM;QACX,OAAO;UACHD,OAAO,EAAE;YACLV,EAAE,EAACL,MAAM;UADJ;QADN,CAAP;MAKH;IAVG,CADH;IAaLiB,MAAM,EAAC,CAACL,KAAD,EAAOC,MAAP,KAAkB;MACrB,MAAM;QAACR;MAAD,IAAOQ,MAAM,CAACE,OAApB;MACA,MAAMG,IAAI,GAAGN,KAAK,CAACR,KAAN,CAAYe,IAAZ,CAAiBD,IAAI,IAAIA,IAAI,CAACb,EAAL,KAAYA,EAArC,CAAb;MACAa,IAAI,CAACX,SAAL,GAAiB,CAACW,IAAI,CAACX,SAAvB;IACH,CAjBI;IAkBLa,OAAO,EAAC,CAACR,KAAD,EAAOC,MAAP,KAAkB;MACtB,MAAMR,EAAE,GAAGQ,MAAM,CAACE,OAAlB;MACA,MAAMM,QAAQ,GAAGT,KAAK,CAACR,KAAN,CAAYkB,MAAZ,CAAoBJ,IAAD,IAAUA,IAAI,CAACb,EAAL,KAAYA,EAAzC,CAAjB;MACAO,KAAK,CAACR,KAAN,GAAciB,QAAd;IAEH,CAvBI;IAwBLE,kBAAkB,EAAC,CAACX,KAAD,EAAOC,MAAP,KAAkB;MACjCD,KAAK,CAACJ,YAAN,GAAqBK,MAAM,CAACE,OAA5B;IACH,CA1BI;IA2BLS,cAAc,EAAEZ,KAAD,IAAW;MACtB,MAAMS,QAAQ,GAAGT,KAAK,CAACR,KAAN,CAAYkB,MAAZ,CAAoBJ,IAAD,IAAUA,IAAI,CAACX,SAAL,KAAmB,KAAhD,CAAjB;MACAK,KAAK,CAACR,KAAN,GAAciB,QAAd;IACH;EA9BI;AAjByB,CAAD,CAA9B;AAmDP,OAAO,MAAMI,WAAW,GAAIb,KAAD,IAAWA,KAAK,CAACc,KAAN,CAAYtB,KAA3C;AACP,OAAO,MAAMuB,mBAAmB,GAAIf,KAAD,IAAW;EAC1C,IAAGA,KAAK,CAACc,KAAN,CAAYlB,YAAZ,KAA6B,KAAhC,EAAsC;IAClC,OAAOI,KAAK,CAACc,KAAN,CAAYtB,KAAnB;EACH,CAFD,MAEK;IACD,OAAOQ,KAAK,CAACc,KAAN,CAAYtB,KAAZ,CAAkBkB,MAAlB,CAA0BM,IAAD,IAC5BhB,KAAK,CAACc,KAAN,CAAYlB,YAAZ,KAA6B,QAA7B,GAAwCoB,IAAI,CAACrB,SAAL,KAAmB,KAA3D,GAAmEqB,IAAI,CAACrB,SAAL,KAAkB,IADlF,CAAP;EAGH;AACJ,CARM;AAUP,OAAO,MAAM;EAACG,OAAD;EAASO,MAAT;EAAgBG,OAAhB;EAAwBG,kBAAxB;EAA2CC;AAA3C,IAA6DvB,UAAU,CAAC4B,OAA9E;AACP,eAAe5B,UAAU,CAACU,OAA1B"},"metadata":{},"sourceType":"module"}