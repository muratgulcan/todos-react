{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/todos-react/todo-app/frontend/src/components/ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggle, destroy, selectFilteredTodos, getTodosAsync } from '../redux/todos/todosSlice';\nimport Error from './Error';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const filteredTodos = useSelector(selectFilteredTodos);\n  const isLoading = useSelector(state => state.todos.isLoading);\n  const error = useSelector(state = state.todos.error);\n  useEffect(() => {\n    dispatch(getTodosAsync());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"todo-list\",\n    children: filteredTodos.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: item.completed ? 'completed' : '',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          onChange: () => dispatch(toggle({\n            id: item.id\n          })),\n          checked: item.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"destroy\",\n          onClick: () => dispatch(destroy(item.id))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoList, \"I6fYdmhcXuqe1tZ2u62+swmStGc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","toggle","destroy","selectFilteredTodos","getTodosAsync","Error","Loading","ToDoList","dispatch","filteredTodos","isLoading","state","todos","error","map","item","completed","id","title"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/todos-react/todo-app/frontend/src/components/ToDoList.js"],"sourcesContent":["import React,{useEffect} from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {toggle,destroy,selectFilteredTodos,getTodosAsync} from '../redux/todos/todosSlice'\nimport Error from './Error';\nimport Loading from './Loading';\n\n\nfunction ToDoList() {\n    const dispatch = useDispatch();\n    const filteredTodos = useSelector(selectFilteredTodos);\n    const isLoading = useSelector(state => state.todos.isLoading);\n    const error = useSelector(state = state.todos.error);\n    useEffect(() => {\n        dispatch(getTodosAsync());\n    },[dispatch]);\n\n    if(isLoading){\n        return <Loading/>\n    }\n    if(error){\n        return <Error message={error} />\n    }\n  return (\n    <ul className=\"todo-list\">\n        {\n            filteredTodos.map((item)=>(\n                <li key={item.id} className={item.completed ? 'completed' : ''}>\n                    <div className=\"view\">\n                        <input className=\"toggle\" type=\"checkbox\" onChange={() => dispatch(toggle({id:item.id}))} checked={item.completed} />\n                        <label>{item.title}</label>\n                        <button className=\"destroy\" onClick={() => dispatch(destroy(item.id))} ></button>\n                    </div>\n                </li>\n            ))\n        }\n    </ul>\n  )\n}\n\nexport default ToDoList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,MAAR,EAAeC,OAAf,EAAuBC,mBAAvB,EAA2CC,aAA3C,QAA+D,2BAA/D;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAGA,SAASC,QAAT,GAAoB;EAAA;;EAChB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,aAAa,GAAGV,WAAW,CAACI,mBAAD,CAAjC;EACA,MAAMO,SAAS,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,SAAtB,CAA7B;EACA,MAAMG,KAAK,GAAGd,WAAW,CAACY,KAAK,GAAGA,KAAK,CAACC,KAAN,CAAYC,KAArB,CAAzB;EACAf,SAAS,CAAC,MAAM;IACZU,QAAQ,CAACJ,aAAa,EAAd,CAAR;EACH,CAFQ,EAEP,CAACI,QAAD,CAFO,CAAT;;EAIA,IAAGE,SAAH,EAAa;IACT,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,IAAGG,KAAH,EAAS;IACL,oBAAO,QAAC,KAAD;MAAO,OAAO,EAAEA;IAAhB;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACH,oBACE;IAAI,SAAS,EAAC,WAAd;IAAA,UAEQJ,aAAa,CAACK,GAAd,CAAmBC,IAAD,iBACd;MAAkB,SAAS,EAAEA,IAAI,CAACC,SAAL,GAAiB,WAAjB,GAA+B,EAA5D;MAAA,uBACI;QAAK,SAAS,EAAC,MAAf;QAAA,wBACI;UAAO,SAAS,EAAC,QAAjB;UAA0B,IAAI,EAAC,UAA/B;UAA0C,QAAQ,EAAE,MAAMR,QAAQ,CAACP,MAAM,CAAC;YAACgB,EAAE,EAACF,IAAI,CAACE;UAAT,CAAD,CAAP,CAAlE;UAA0F,OAAO,EAAEF,IAAI,CAACC;QAAxG;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UAAQD,IAAI,CAACG;QAAb;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAQ,SAAS,EAAC,SAAlB;UAA4B,OAAO,EAAE,MAAMV,QAAQ,CAACN,OAAO,CAACa,IAAI,CAACE,EAAN,CAAR;QAAnD;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ,GAASF,IAAI,CAACE,EAAd;MAAA;MAAA;MAAA;IAAA,QADJ;EAFR;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA9BQV,Q;UACYP,W,EACKD,W,EACJA,W,EACJA,W;;;KAJTQ,Q;AAgCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}